{"version":3,"sources":["components/Button.js","components/Settings.js","components/HeroSection.js","components/pages/Home.js","components/CardItem.js","components/Header.js","components/ThemeSection.js","components/pages/Themes.js","components/Word.js","components/WrongLetters.js","helpers/helpers.js","components/Popup.js","components/Notification.js","components/Riddle.js","components/WildAnimalsGame.js","components/pages/GameWild.js","components/FarmAnimalsGames.js","components/pages/GameFarm.js","components/FoodGames.js","components/pages/GameFood.js","components/GameSection.js","components/pages/SettingsPage.js","components/Statistics.js","components/pages/Stats.js","App.js","index.js"],"names":["STYLES","Button","children","type","onClick","buttonStyle","checkButtonStyle","buttonSize","includes","to","className","Settings","props","trigger","setSettingsButton","HeroSection","useState","settingsPopup","setSettingsPopup","style","width","height","boxShadow","src","alt","position","color","marginLeft","marginTop","fontSize","textShadow","Home","CardItem","path","textDecoration","backgroundImage","backgroundSize","backgroundRepeat","text","Header","href","ThemeSection","Themes","Word","selectedWord","correctLetters","selectedRiddle","split","map","letter","i","WrongLetters","wrongLetters","length","reduce","prev","curr","showNotification","setter","setTimeout","checkWin","correct","wrong","word","status","forEach","Popup","selectedGif","setPlayable","playAgain","finalMessage","finalMessageRevealWord","playable","useEffect","display","window","open","Notification","bg","backgroundColor","Riddle","riddle","str","words","riddles","gifs","ran","Math","floor","random","WildAnimalsGame","setCorrectLetters","setWrongLetters","setShowNotification","removeItem","array","item","splice","handleKeydown","event","key","keyCode","toLowerCase","show","currentLetters","addEventListener","removeEventListener","nwins","nloss","str_nwins","localStorage","getItem","parseInt","setItem","str_nloss","saveLocalStatus","correctWords","wrongWords","JSON","parse","stringify","push","saveLocalWords","GameWild","FarmAnimalsGames","GameFarm","FoodGames","GameFood","GameSection","SettingsPage","Statistics","nlosses","cwords","wwords","total","el","Stats","App","basename","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.094f11f2.chunk.js","sourcesContent":["import React from 'react'\nimport './Button.css'\nimport { Link } from 'react-router-dom'\n\nconst STYLES = ['btn--primary', 'btn--outline']\n\n//const SIZES = ['btn--med', 'btn--large']\n\nexport const Button = ({\n    children, \n    type, \n    onClick, \n    buttonStyle, \n    buttonSize\n}) => {\n    const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\n\n    //const checkButtonSize = STYLES.includes(buttonSize) ? buttonStyle : SIZES[0];\n\n    return (\n        <Link to='/game-themes' className='btn-theme'>\n            <button className={`btn ${checkButtonStyle} ${checkButtonStyle}`} onClick={onClick} type={type}>\n                {children}\n            </button>\n        </Link>\n    )\n};\n","import React from 'react';\nimport './Settings.css';\n\nconst Settings = (props) => {\n  return (props.trigger) ? (\n    <div className=\"settings-container\">\n      <div className=\"settings\">\n        <h2>Music <button></button></h2>\n        <h2>Sound <button></button></h2>\n        <button onClick ={() => props.setSettingsButton(false)}>Ok</button>\n        {props.children}\n      </div>\n    </div>\n\n  ) : \"\";\n}\n\nexport default Settings","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../App.css';\nimport { Button } from './Button';\nimport './HeroSection.css';\nimport Settings from './Settings';\n\nfunction HeroSection() {\n\n  const [settingsPopup, setSettingsPopup] = useState(false);\n  return (\n    <div className='hero-container'>\n      <h1>\n        <img style={{width : '90px', height : '90px', boxShadow: '5px 5px 5px #20421c'}} src='./images/logo.png' alt='Guessify'/>\n          &nbsp; Welcome to Guessify!\n      </h1>\n      <p>Can you guess all the words?</p>\n      <div className='hero-btns'>\n        <Button\n          className='btns'\n          buttonStyle='btn--outline'\n          buttonSize='btn--large'\n        >\n          Let's Play! <i className='far fa-play-circle' />\n        </Button>\n      </div>\n      <div  className='hero-links'>\n        <Link to=\"/player-stats\" className='player-stats'>\n                  <i style={{position: 'fixed', color: '#fffcf7', marginLeft: '-420px', marginTop: '130px', fontSize: '80px', textShadow: '-3px 3px 3px #787878'}} className='fas fa-poll'></i>\n        </Link>   \n        {/* <button className='settings-btn' onClick={() => setSettingsPopup(true)}> {<i style={{alignItems: 'flex-start', color: '#999999', fontSize: '60px', textShadow: '-5px 5px #787878'}} 'fas fa-cogs' />} </button>  */}\n      </div>\n      <Settings trigger={settingsPopup} setSettingsPopup={setSettingsPopup}/>\n    </div>\n    \n  );\n}\n\nexport default HeroSection;","import React from 'react';\nimport '../../App.css';\nimport HeroSection from '../HeroSection';\n\nfunction Home() {\n  return (\n    <>\n      <HeroSection />\n    </>\n  );\n}\n\nexport default Home;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction CardItem(props) {\n  return (\n    <>\n      <Link className='cards__item__link' to={props.path} style={{ textDecoration: 'none' }}>\n        <li className='cards__item' style={{\n            backgroundImage: `url(${props.src})`,\n            backgroundSize: 'cover',\n            backgroundRepeat: 'no-repeat'\n          }}>\n        <div className='cards__item__info'>\n            <h5 className='cards__item__text'>{props.text}</h5>\n        </div>\n        <i className=\"fas fa-chevron-right\" style={{\n          color: '#fadea7',\n          fontSize: '30px',\n          textShadow: '2px 2px 2px #8b7f6a'\n        }}></i>\n      </li>\n          \n      </Link>\n    </>\n  );\n}\n\nexport default CardItem;","import React from 'react'\nimport './Header.css'\n\nfunction Header() {\n    return (\n        <div>\n            <a href='/'>\n                <h3 className=\"heading\">\n                    <img src='./images/logo.png' alt='Guessify'/>\n                        &nbsp; Welcome to Guessify!\n                    </h3>\n            </a>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react';\nimport CardItem  from './CardItem';\nimport './ThemeSection.css';\nimport Header from '../components/Header';\n\nfunction ThemeSection() {\n  return (\n    <div className='theme-container'>\n      <Header />\n      <div className='cards__container'>\n         <div className='card-items'>\n            <CardItem\n                    src='./images/wilda.jpg'\n                    text='Jungle Book'\n                    path='/game-wild'\n                  />\n            <CardItem\n                    src='./images/farm.jpg'\n                    text=\"McDonald's Farm\"\n                    path='/game-farm'\n                  />  \n            <CardItem\n                    src='./images/food.png'\n                    text='Food For Thought'\n                    path='/game-food'\n                  />\n            <CardItem\n                    src='./images/travel.jpg'\n                    text='Cities of the World'\n                    path='/game-city'\n                  />\n            <CardItem\n                    src='./images/scientific.jpg'\n                    text='Backyard Science'\n                    path='/game-science'\n                  />\n            <CardItem\n                    src='./images/g.png'\n                    text='General Knowledge'\n                    path='/game-gk'\n                  />\n         \n         </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ThemeSection;","import React from 'react';\nimport '../../App.css';\nimport ThemeSection from '../ThemeSection';\n\nfunction Themes() {\n  return (\n    <>\n      <ThemeSection />\n    </>\n  );\n}\n\nexport default Themes;","import React from 'react'\nimport './Word.css'\n\nfunction Word({selectedWord, correctLetters, selectedRiddle}) {\n\n    return (\n        <div className='word'>\n            {selectedWord.split('').map((letter, i) => {\n                return (\n                <span className=\"letter\" key={i}>\n                    {correctLetters.includes(letter) ? letter : ''}\n                </span>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default Word\n","import React from 'react'\nimport './WrongLetters.css'\n\nconst WrongLetters = ({ wrongLetters }) => {\n\n  return (\n    <div className=\"wrong-letters-container\">\n      <div className=\"wrong-letters\">\n        {wrongLetters.length > 0 && \n          <p>Wrong Guesses: </p>\n        }\n        {wrongLetters\n          .map((letter, i) => <span key={i}>{letter}</span>)\n          .reduce((prev, curr) => prev === null ? [curr] : [prev, ', ', curr], null)}\n        <br />\n        <br />\n        <p className=\"guess-left\">Number of Guesses Left: {6-wrongLetters.length} </p>\n      </div>\n    </div>\n  )\n}\n\nexport default WrongLetters\n","export function showNotification(setter) {\n    setter(true);\n    setTimeout(() => {\n      setter(false);\n    }, 2000);\n  }\n  \n  export function checkWin(correct, wrong, word) {\n    let status = 'win';\n  \n    // Check for win\n    word.split('').forEach(letter => {\n      if(!correct.includes(letter)){\n        status = '';\n      }\n    });\n    \n    // Check for loss\n    if(wrong.length === 6) status = 'lose';\n\n    return status\n  }\n","import React, { useEffect } from 'react';\nimport './Popup.css'\nimport { checkWin } from '../helpers/helpers'\n\nconst Popup = ({ correctLetters, wrongLetters, selectedWord, selectedGif, setPlayable, playAgain}) => {\n  \n  let finalMessage = '';\n  let finalMessageRevealWord = '';\n  let playable = true;\n\n  if( checkWin(correctLetters, wrongLetters, selectedWord) === 'win' ) {\n      finalMessage = 'It was a correct Guess! 😃 I am a ' + selectedWord + ' !';\n      playable = false;\n\n  } else if( checkWin(correctLetters, wrongLetters, selectedWord) === 'lose' ) {\n      finalMessage = 'Unfortunately you lost. 😕';\n      finalMessageRevealWord = `...the word was: ${selectedWord}`;\n      playable = false;\n      \n  }\n\n  function statView () {\n    window.open('/player-stats', '_self');\n    playAgain();\n  }\n\n\n  useEffect(() => {\n    setPlayable(playable);\n  });\n\n  return (\n    <div className=\"popup-container\" style={finalMessage !== '' ? {display:'flex', marginTop:'-20px'} : {}}>\n      <div className=\"popup\">\n        <h2>{finalMessage}</h2>\n        <h3>{finalMessageRevealWord}</h3>\n        <img src={selectedGif} alt={selectedWord} /><br />\n        <button onClick={playAgain}>Play Again</button> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \n        <button onClick={statView}>View Stats</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Popup","import React from 'react'\nimport './Notification.css'\n\nconst Notification = ({ showNotification, bg, color}) => {\n  return (\n    <div className={`notification-container ${showNotification ? 'show' : ''}`} style={{backgroundColor: bg}}>\n      <p style={{color: color}}>You have already entered this letter</p>\n    </div>\n  )\n}\n\nexport default Notification","import React from 'react'\nimport './Riddle.css'\n\n\nfunction Riddle(selectedRiddle) {\n    var riddle = selectedRiddle.selectedRiddle;\n\n    return (\n        <div className='riddle-container'>\n            {riddle.split('\\n').map(str => <p className='text-riddle'>{str}</p>)}\n        </div>\n    )\n}\n\nexport default Riddle\n","import React, {useState, useEffect} from 'react';\nimport Word from '../components/Word'\nimport WrongLetters from './WrongLetters';\nimport { checkWin, showNotification as show} from '../helpers/helpers'\nimport Popup from '../components/Popup'\nimport Notification from '../components/Notification'\nimport Riddle from '../components/Riddle'\n\nimport Header from '../components/Header'\nimport './WildAnimalsGame.css';\n\nconst words = ['centipede', 'penguin', 'giraffe', 'hippopotamus'];\nconst riddles = [\"Oh how I love my dancing feet! \\n They stay together - oh so neat. \\nAnd when I want to walk a line. \\nI count them up, ten times or more, \\nAnd race on-off, across the floor.\", \"\\nMy wings are used as flippers. \\nSo in water I can swim. \\nSometimes when on land. \\nI slide On my belly in the snow.\", \"\\nI like to use my long tongue \\nTo eat leaves from tops of trees. \\nI don’t have to climb up though. \\nWith my long neck it’s a breeze.\", \"\\nMy name comes from the Greeks and means river horse. \\nI’m widely regarded as one of the most dangerous animals in Africa. \\nDespite my girth and short legs, \\nI can outrun humans.\"];\nconst gifs = [\"./images/gifcp.gif\", \"./images/gifpeng.gif\", \"./images/gifgiraffe.gif\", \"./images/gifhippo.gif\"];\nconst ran = Math.floor(Math.random() * words.length);\n\n\n//  a  river horse or whale on land; I've four squat legs on which to stand. In water, my eyes skim by, watching out on the sly. When I'm hungry, it's grass I eat, soaking in African heat. Big and bad; fierce, but cute- it's well known that I yawn and toot. \n\nlet selectedWord = words[ran];\nlet selectedRiddle = riddles[ran];\nlet selectedGif = gifs[ran];\n\nfunction WildAnimalsGame() {\n        \n    const [playable, setPlayable] = useState(true);\n    const [correctLetters, setCorrectLetters] = useState([]);\n    const [wrongLetters, setWrongLetters] = useState([]);\n    const [showNotification, setShowNotification] = useState(false);\n\n\n    useEffect(() => {\n        const handleKeydown = event => {\n            const {key, keyCode} = event;\n            if (playable && keyCode >= 65 && keyCode <= 90) {\n                const letter = key.toLowerCase();\n\n                if (selectedWord.includes(letter)) {\n                    if (!correctLetters.includes(letter)) {\n                        setCorrectLetters(currentLetters => [...currentLetters, letter]);\n                    } else {\n                        show(setShowNotification);\n                    }\n                } else {\n                    if (!wrongLetters.includes(letter)) {\n                        setWrongLetters(wrongLetters => [...wrongLetters, letter]);\n                    } else {\n                        show(setShowNotification);\n                    }\n                }\n            }\n        } \n        window.addEventListener('keydown', handleKeydown);\n\n        return () => window.removeEventListener('keydown', handleKeydown);\n    }, [correctLetters, wrongLetters, playable]);\n\n\n    function saveLocalStatus (status){\n        let nwins;\n        let nloss;\n        \n        if(status === 'win') {\n            let str_nwins = localStorage.getItem('wins');\n\n            if(str_nwins===null || str_nwins===\"null\"){\n                nwins = 0;\n            } else {\n                nwins = parseInt(str_nwins);\n            }\n\n            nwins++;\n\n            localStorage.setItem('wins', nwins);\n\n\n        } else if(status === 'lose') {\n            let str_nloss = localStorage.getItem('loss');\n\n            if(str_nloss===null || str_nloss===\"null\"){\n            nloss = 0;\n            } else {\n            nloss = parseInt(str_nloss);\n            }\n\n            nloss++;\n\n            localStorage.setItem('loss', nloss);\n        \n        }\n    }\n\n    function removeItem(array, item){\n        for(var i in array){\n            if(array[i]===item){\n                array.splice(i,1);\n                break;\n            }\n        }\n        return array\n    }\n\n\n  function saveLocalWords (status, selectedWord) {\n\n    var correctWords = [];\n    var wrongWords = [];\n\n    if (status==='win') {\n\n        correctWords = localStorage.getItem('correctWords');\n        correctWords = correctWords ? JSON.parse(correctWords) : [];\n\n        wrongWords = localStorage.getItem('wrongWords');\n        wrongWords = wrongWords ? JSON.parse(wrongWords) : [];\n        \n        wrongWords = removeItem(wrongWords ,selectedWord);\n        localStorage.setItem('wrongWords', JSON.stringify(wrongWords));\n\n\n        if(!correctWords.includes(selectedWord)){\n            correctWords.push(selectedWord);\n        }\n\n        localStorage.setItem('correctWords', JSON.stringify(correctWords));\n\n\n    } else if (status==='lose') {\n\n        wrongWords = localStorage.getItem('wrongWords');\n        wrongWords = wrongWords ? JSON.parse(wrongWords) : [];\n\n        correctWords = localStorage.getItem('correctWords');\n        correctWords = correctWords ? JSON.parse(correctWords) : [];\n\n        correctWords = removeItem(correctWords ,selectedWord);\n        localStorage.setItem('correctWords', JSON.stringify(correctWords));\n        \n        if(!wrongWords.includes(selectedWord)){\n              wrongWords.push(selectedWord);\n        }\n\n        localStorage.setItem('wrongWords', JSON.stringify(wrongWords));\n    }\n\n\n}\n\n    function playAgain() {\n        let status = checkWin(correctLetters, wrongLetters, selectedWord);\n\n        setPlayable(true);\n        \n        saveLocalStatus(status);\n        saveLocalWords(status, selectedWord)\n        //Empty the arrays\n        setCorrectLetters([]);\n        setWrongLetters([]);\n\n        var random = Math.floor(Math.random() * words.length);\n        while (random === ran) {\n            random = Math.floor(Math.random() * words.length);\n        }\n        selectedWord = words[random];\n        selectedRiddle = riddles[random];\n        selectedGif = gifs[random];\n    }\n\n\n  return (\n    <>   \n      <div className=\"game-container\">\n        <Header/>\n          <div className=\"game\">\n            <h3 className=\"game-heading\">~Jungle Book Edition~</h3>\n            <Riddle selectedRiddle={selectedRiddle} />\n            <Word selectedWord={selectedWord} correctLetters={correctLetters} selectedRiddle={selectedRiddle} />\n            <WrongLetters wrongLetters={wrongLetters} />\n          </div>\n      </div>\n      <Notification showNotification={showNotification} />\n      <Popup correctLetters={correctLetters} wrongLetters={wrongLetters} selectedWord={selectedWord} selectedGif={selectedGif} setPlayable={setPlayable} playAgain={playAgain} />\n    </>\n  )  \n}\n\nexport default WildAnimalsGame;","\nimport React from 'react';\nimport '../../App.css';\nimport WildAnimalsGame from '../WildAnimalsGame';\n\nfunction GameWild() {\n  return (\n    <>\n      <WildAnimalsGame />\n    </>\n  );\n}\n\nexport default GameWild;","import React, {useState, useEffect} from 'react';\nimport Word from '../components/Word'\nimport WrongLetters from './WrongLetters';\nimport { checkWin, showNotification as show} from '../helpers/helpers'\nimport Popup from '../components/Popup'\nimport Notification from '../components/Notification'\nimport Riddle from '../components/Riddle'\n\nimport Header from '../components/Header'\nimport './FarmAnimalsGames.css';\n\nconst words = ['horse', 'donkey', 'cows', 'chicken'];\nconst riddles = [\"I am a type of animal. \\nSome say that I have a long face. \\nI’m very good at running fast. \\nSo, people ride me in a race.\", \"It's grey, but it's not a wolf, \\nLong-eared, but not a rabbit, \\nWith hooves, but not a cow. \\nWhat is it?\", \"They live in a field. \\nMilk is what they make. \\nThey help give us leather \\n and a juicy steak.\", \"You might be called this animal \\nIf someone thinks that you’re afraid. \\nThis is something that you might eat \\nAs well as its eggs that it laid.\"];\nconst gifs = [\"./images/horse.gif\", \"./images/donkey.gif\", \"./images/cow.gif\", \"./images/chicken.gif\"];\nconst ran = Math.floor(Math.random() * words.length);\n\n\n//  a  river horse or whale on land; I've four squat legs on which to stand. In water, my eyes skim by, watching out on the sly. When I'm hungry, it's grass I eat, soaking in African heat. Big and bad; fierce, but cute- it's well known that I yawn and toot. \n\nlet selectedWord = words[ran];\nlet selectedRiddle = riddles[ran];\nlet selectedGif = gifs[ran];\n\nfunction FarmAnimalsGames() {\n        \n    const [playable, setPlayable] = useState(true);\n    const [correctLetters, setCorrectLetters] = useState([]);\n    const [wrongLetters, setWrongLetters] = useState([]);\n    const [showNotification, setShowNotification] = useState(false);\n\n\n    useEffect(() => {\n        const handleKeydown = event => {\n            const {key, keyCode} = event;\n            if (playable && keyCode >= 65 && keyCode <= 90) {\n                const letter = key.toLowerCase();\n\n                if (selectedWord.includes(letter)) {\n                    if (!correctLetters.includes(letter)) {\n                        setCorrectLetters(currentLetters => [...currentLetters, letter]);\n                    } else {\n                        show(setShowNotification);\n                    }\n                } else {\n                    if (!wrongLetters.includes(letter)) {\n                        setWrongLetters(wrongLetters => [...wrongLetters, letter]);\n                    } else {\n                        show(setShowNotification);\n                    }\n                }\n            }\n        } \n        window.addEventListener('keydown', handleKeydown);\n\n        return () => window.removeEventListener('keydown', handleKeydown);\n    }, [correctLetters, wrongLetters, playable]);\n\n\n    function saveLocalStatus (status){\n        let nwins;\n        let nloss;\n        \n        if(status === 'win') {\n            let str_nwins = localStorage.getItem('wins');\n\n            if(str_nwins===null || str_nwins===\"null\"){\n                nwins = 0;\n            } else {\n                nwins = parseInt(str_nwins);\n            }\n\n            nwins++;\n\n            localStorage.setItem('wins', nwins);\n\n\n        } else if(status === 'lose') {\n            let str_nloss = localStorage.getItem('loss');\n\n            if(str_nloss===null || str_nloss===\"null\"){\n            nloss = 0;\n            } else {\n            nloss = parseInt(str_nloss);\n            }\n\n            nloss++;\n\n            localStorage.setItem('loss', nloss);\n        \n        }\n    }\n\n    function removeItem(array, item){\n        for(var i in array){\n            if(array[i]===item){\n                array.splice(i,1);\n                break;\n            }\n        }\n        return array\n    }\n\n\n  function saveLocalWords (status, selectedWord) {\n\n    var correctWords = [];\n    var wrongWords = [];\n\n    if (status==='win') {\n\n        correctWords = localStorage.getItem('correctWords');\n        correctWords = correctWords ? JSON.parse(correctWords) : [];\n\n        wrongWords = localStorage.getItem('wrongWords');\n        wrongWords = wrongWords ? JSON.parse(wrongWords) : [];\n        \n        wrongWords = removeItem(wrongWords ,selectedWord);\n        localStorage.setItem('wrongWords', JSON.stringify(wrongWords));\n\n\n        if(!correctWords.includes(selectedWord)){\n            correctWords.push(selectedWord);\n        }\n\n        localStorage.setItem('correctWords', JSON.stringify(correctWords));\n\n\n    } else if (status==='lose') {\n\n        wrongWords = localStorage.getItem('wrongWords');\n        wrongWords = wrongWords ? JSON.parse(wrongWords) : [];\n\n        correctWords = localStorage.getItem('correctWords');\n        correctWords = correctWords ? JSON.parse(correctWords) : [];\n\n        correctWords = removeItem(correctWords ,selectedWord);\n        localStorage.setItem('correctWords', JSON.stringify(correctWords));\n        \n        if(!wrongWords.includes(selectedWord)){\n              wrongWords.push(selectedWord);\n        }\n\n        localStorage.setItem('wrongWords', JSON.stringify(wrongWords));\n    }\n\n\n}\n\n    function playAgain() {\n        let status = checkWin(correctLetters, wrongLetters, selectedWord);\n\n        setPlayable(true);\n        \n        saveLocalStatus(status);\n        saveLocalWords(status, selectedWord)\n        //Empty the arrays\n        setCorrectLetters([]);\n        setWrongLetters([]);\n\n        var random = Math.floor(Math.random() * words.length);\n        while (random === ran) {\n            random = Math.floor(Math.random() * words.length);\n        }\n        selectedWord = words[random];\n        selectedRiddle = riddles[random];\n        selectedGif = gifs[random];\n    }\n\n\n  return (\n    <>   \n      <div className=\"farm-game-container\">\n        <Header/>\n          <div className=\"farm-game\">\n            <h3 className=\"farm-game-heading\">~Old McDonalds' Farm Edition~</h3>\n            <Riddle selectedRiddle={selectedRiddle} />\n            <Word selectedWord={selectedWord} correctLetters={correctLetters} selectedRiddle={selectedRiddle} />\n            <WrongLetters wrongLetters={wrongLetters} />\n          </div>\n      </div>\n      <Notification showNotification={showNotification} bg='rgba(23, 31, 102, 0.801)' color='aliceblue'  />\n      <Popup correctLetters={correctLetters} wrongLetters={wrongLetters} selectedWord={selectedWord} selectedGif={selectedGif} setPlayable={setPlayable} playAgain={playAgain} />\n    </>\n  )  \n}\n\nexport default FarmAnimalsGames;","import React from 'react';\nimport '../../App.css';\nimport FarmAnimalsGames from '../FarmAnimalsGames'\n\nfunction GameFarm() {\n  return (\n    <>\n      <FarmAnimalsGames />\n    </>\n  );\n}\n\nexport default GameFarm;","import React, {useState, useEffect} from 'react';\nimport Word from '../components/Word'\nimport WrongLetters from './WrongLetters';\nimport { checkWin, showNotification as show} from '../helpers/helpers'\nimport Popup from '../components/Popup'\nimport Notification from '../components/Notification'\nimport Riddle from '../components/Riddle'\n\nimport Header from '../components/Header'\nimport './FoodGames.css';\n\nconst words = ['coconut', 'potato', 'broccoli', 'tomato'];\nconst riddles = [\"I’ve a brown shell on the outside \\nAnd my shape is an oval \\nHowever, I am not an egg \\nFrom a palm tree’s where I fall\", \"I can be fried \\nBoiled and mashed \\nRoasted and baked \\nScalloped and hashed\", \"I look like a group of \\nlittle trees with stems and green leaves. \\nI am very good for you. \\nWho am I?\", \"You know me as a vegetable but I am a fruit. \\nRed in colour, with seeds inside. \\nYou can add me in your salad. \\nI am potato’s best friend. \\nWho am I?\"];\nconst gifs = [\"./images/coconut.gif\", \"./images/potato.gif\", \"./images/broccoli.gif\", \"./images/tomato.gif\"];\nconst ran = Math.floor(Math.random() * words.length);\n\n\n//  a  river horse or whale on land; I've four squat legs on which to stand. In water, my eyes skim by, watching out on the sly. When I'm hungry, it's grass I eat, soaking in African heat. Big and bad; fierce, but cute- it's well known that I yawn and toot. \n\nlet selectedWord = words[ran];\nlet selectedRiddle = riddles[ran];\nlet selectedGif = gifs[ran];\n\nfunction FoodGames() {\n        \n    const [playable, setPlayable] = useState(true);\n    const [correctLetters, setCorrectLetters] = useState([]);\n    const [wrongLetters, setWrongLetters] = useState([]);\n    const [showNotification, setShowNotification] = useState(false);\n\n\n    useEffect(() => {\n        const handleKeydown = event => {\n            const {key, keyCode} = event;\n            if (playable && keyCode >= 65 && keyCode <= 90) {\n                const letter = key.toLowerCase();\n\n                if (selectedWord.includes(letter)) {\n                    if (!correctLetters.includes(letter)) {\n                        setCorrectLetters(currentLetters => [...currentLetters, letter]);\n                    } else {\n                        show(setShowNotification);\n                    }\n                } else {\n                    if (!wrongLetters.includes(letter)) {\n                        setWrongLetters(wrongLetters => [...wrongLetters, letter]);\n                    } else {\n                        show(setShowNotification);\n                    }\n                }\n            }\n        } \n        window.addEventListener('keydown', handleKeydown);\n\n        return () => window.removeEventListener('keydown', handleKeydown);\n    }, [correctLetters, wrongLetters, playable]);\n\n\n    function saveLocalStatus (status){\n        let nwins;\n        let nloss;\n        \n        if(status === 'win') {\n            let str_nwins = localStorage.getItem('wins');\n\n            if(str_nwins===null || str_nwins===\"null\"){\n                nwins = 0;\n            } else {\n                nwins = parseInt(str_nwins);\n            }\n\n            nwins++;\n\n            localStorage.setItem('wins', nwins);\n\n\n        } else if(status === 'lose') {\n            let str_nloss = localStorage.getItem('loss');\n\n            if(str_nloss===null || str_nloss===\"null\"){\n            nloss = 0;\n            } else {\n            nloss = parseInt(str_nloss);\n            }\n\n            nloss++;\n\n            localStorage.setItem('loss', nloss);\n        \n        }\n    }\n\n    function removeItem(array, item){\n        for(var i in array){\n            if(array[i]===item){\n                array.splice(i,1);\n                break;\n            }\n        }\n        return array\n    }\n\n\n  function saveLocalWords (status, selectedWord) {\n\n    var correctWords = [];\n    var wrongWords = [];\n\n    if (status==='win') {\n\n        correctWords = localStorage.getItem('correctWords');\n        correctWords = correctWords ? JSON.parse(correctWords) : [];\n\n        wrongWords = localStorage.getItem('wrongWords');\n        wrongWords = wrongWords ? JSON.parse(wrongWords) : [];\n        \n        wrongWords = removeItem(wrongWords ,selectedWord);\n        localStorage.setItem('wrongWords', JSON.stringify(wrongWords));\n\n\n        if(!correctWords.includes(selectedWord)){\n            correctWords.push(selectedWord);\n        }\n\n        localStorage.setItem('correctWords', JSON.stringify(correctWords));\n\n\n    } else if (status==='lose') {\n\n        wrongWords = localStorage.getItem('wrongWords');\n        wrongWords = wrongWords ? JSON.parse(wrongWords) : [];\n\n        correctWords = localStorage.getItem('correctWords');\n        correctWords = correctWords ? JSON.parse(correctWords) : [];\n\n        correctWords = removeItem(correctWords ,selectedWord);\n        localStorage.setItem('correctWords', JSON.stringify(correctWords));\n        \n        if(!wrongWords.includes(selectedWord)){\n              wrongWords.push(selectedWord);\n        }\n\n        localStorage.setItem('wrongWords', JSON.stringify(wrongWords));\n    }\n\n\n}\n\n    function playAgain() {\n        let status = checkWin(correctLetters, wrongLetters, selectedWord);\n\n        setPlayable(true);\n        \n        saveLocalStatus(status);\n        saveLocalWords(status, selectedWord)\n        //Empty the arrays\n        setCorrectLetters([]);\n        setWrongLetters([]);\n\n        var random = Math.floor(Math.random() * words.length);\n        while (random === ran) {\n            random = Math.floor(Math.random() * words.length);\n        }\n        selectedWord = words[random];\n        selectedRiddle = riddles[random];\n        selectedGif = gifs[random];\n    }\n\n\n  return (\n    <>   \n      <div className=\"food-game-container\">\n        <Header/>\n          <div className=\"food-game\">\n            <h3 className=\"food-game-heading\">~Food for Thought Edition~</h3>\n            <Riddle selectedRiddle={selectedRiddle} />\n            <Word selectedWord={selectedWord} correctLetters={correctLetters} selectedRiddle={selectedRiddle} />\n            <WrongLetters wrongLetters={wrongLetters} />\n          </div>\n      </div>\n      <Notification showNotification={showNotification} bg='rgba(158, 12, 60, 0.918)' color='aliceblue'  />\n      <Popup correctLetters={correctLetters} wrongLetters={wrongLetters} selectedWord={selectedWord} selectedGif={selectedGif} setPlayable={setPlayable} playAgain={playAgain} />\n    </>\n  )  \n}\n\nexport default FoodGames;","\nimport React from 'react';\nimport '../../App.css';\nimport FoodGames from '../FoodGames';\n\nfunction GameFood() {\n  return (\n    <>\n    <FoodGames />\n    </>\n  );\n}\n\nexport default GameFood;","import React, {useState, useEffect} from 'react';\nimport Word from '../components/Word'\nimport WrongLetters from './WrongLetters';\nimport {showNotification as show} from '../helpers/helpers'\nimport Popup from '../components/Popup'\nimport Notification from '../components/Notification'\nimport './GameSection.css'\n\n\nconst words = ['application', 'programming', 'interface', 'wizard'];\n\nlet selectedWord = words[Math.floor(Math.random() * words.length)];\n\nfunction GameSection() {\n\n    const [playable, setPlayable] = useState(true);\n    const [correctLetters, setCorrectLetters] = useState([]);\n    const [wrongLetters, setWrongLetters] = useState([]);\n    const [showNotification, setShowNotification] = useState(false);\n\n    useEffect(() => {\n        const handleKeydown = event => {\n            const {key, keyCode} = event;\n            if (playable && keyCode >= 65 && keyCode <= 90) {\n                const letter = key.toLowerCase();\n    \n                if (selectedWord.includes(letter)) {\n                    if (!correctLetters.includes(letter)) {\n                        setCorrectLetters(currentLetters => [...currentLetters, letter]);\n                    } else {\n                        show(setShowNotification);\n                    }\n                } else {\n                    if (!wrongLetters.includes(letter)) {\n                        setWrongLetters(wrongLetters => [...wrongLetters, letter]);\n                    } else {\n                        show(setShowNotification);\n                    }\n                }\n            }\n        } \n        window.addEventListener('keydown', handleKeydown);\n\n        return () => window.removeEventListener('keydown', handleKeydown);\n    }, [correctLetters, wrongLetters, playable]);\n\n    function playAgain() {\n        setPlayable(true);\n\n        //Empty the arrays\n        setCorrectLetters([]);\n        setWrongLetters([]);\n\n        const random = Math.floor(Math.random() * words.length);\n        selectedWord = words[random];\n    }\n\n    return (\n        <>\n            <div className=\"game-container\">\n                <WrongLetters wrongLetters={wrongLetters} />\n                <Word selectedWord={selectedWord} correctLetters={correctLetters} />\n            </div>\n            <Notification showNotification={showNotification} />\n            <Popup correctLetters={correctLetters} wrongLetters={wrongLetters} selectedWord={selectedWord} setPlayable={setPlayable} playAgain={playAgain} />\n        </>\n    )  \n}\n\nexport default GameSection;","import React from 'react';\nimport '../../App.css';\nimport Settings from '../Settings';\n\nfunction SettingsPage() {\n  return (\n    <>\n      <Settings />\n    </>\n  );\n}\n\nexport default SettingsPage;","import React from 'react'\nimport Header from './Header';\nimport './Statistics.css'\n\nfunction Statistics() {\n    let nwins = localStorage.getItem('wins') || '0';\n    let nlosses = localStorage.getItem('loss') || '0';\n    let cwords = JSON.parse(localStorage.getItem('correctWords'));\n    let wwords = JSON.parse(localStorage.getItem('wrongWords'));\n    let total = parseInt(nwins)+ parseInt(nlosses) || '0';\n\n    return (\n        <div className='stats-container'>\n            <Header />\n            <div className='stats'>\n                <h4>Total Number of Games Played: {total}</h4>\n                <h4>Total Wins: {nwins}</h4>\n                <h4>Total Losses: {nlosses}</h4>\n                <div className='correct'>\n                    <h3>Correct Guesses</h3>\n                    <hr />\n                    {cwords.map(el => (<p className='correct-words'>{el}</p>))}\n                </div>\n                <div className='wrong'> \n                    <h3>Words yet to master</h3>\n                    <hr />\n                    {wwords.map(el => (<p className='wrong-words'>{el}</p>))}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Statistics\n","import React from 'react';\nimport '../../App.css';\nimport Statistics from '../Statistics';\n\nfunction Stats() {\n  return (\n    <>\n      <Statistics />\n    </>\n  );\n}\n\nexport default Stats;","import React from 'react'\nimport Home from './components/pages/Home'\nimport Themes from './components/pages/Themes'\nimport GameWild from './components/pages/GameWild'\nimport GameFarm from './components/pages/GameFarm'\nimport GameFood from './components/pages/GameFood'\nimport GameSection from './components/GameSection'\nimport {BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport './App.css';\nimport SettingsPage from './components/pages/SettingsPage'\nimport Stats from './components/pages/Stats'\n\n\nfunction App() {\n  //const classes = styles(); \n\n  return (\n    <>\n      <Router basename=\"/Guessify\">\n        <Switch>\n          <Route path='/' exact component = {Home} />\n          <Route path='/game-themes' exact component = {Themes} />\n          <Route path='/game-farm' exact component = {GameFarm} />\n          <Route path='/game-wild' exact component = {GameWild} />\n          <Route path='/game-food' exact component = {GameFood} />\n          <Route path='/game-gk' exact component = {GameSection} />\n          <Route path='/settings' exact component = {SettingsPage} />\n          <Route path='/player-stats' exact component = {Stats} />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n"],"sourceRoot":""}